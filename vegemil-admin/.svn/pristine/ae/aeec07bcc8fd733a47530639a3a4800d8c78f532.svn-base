package com.vegemil.controller;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.CollectionUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.vegemil.adapter.GsonLocalDateTimeAdapter;
import com.vegemil.constant.Method;
import com.vegemil.domain.CalendarModelDTO;
import com.vegemil.service.AdminEventService;
import com.vegemil.util.UiUtils;

@Controller
public class AdminEventController extends UiUtils {

	@Autowired
	private AdminEventService adminEventService;
	
	@RequestMapping(value = "/admin/event/{viewName}")
    public String adminMain(@PathVariable(value = "viewName", required = false) String viewName)throws Exception{
		// View attribute
		return "admin/event/"+viewName;
    }
	
	/* 아기달력모델  2021-08-04 */
	@GetMapping(value = "/admin/event/calendarmodel/table")
	 public @ResponseBody JsonObject getCalenModelList(@ModelAttribute("params") CalendarModelDTO params, Model model) {

		JsonObject jsonObj = new JsonObject();
		List<CalendarModelDTO> calendarModelList = adminEventService.getCalendarModelList(params);
		if (CollectionUtils.isEmpty(calendarModelList) == false) {
			Gson gson = new GsonBuilder().registerTypeAdapter(LocalDateTime.class, new GsonLocalDateTimeAdapter()).create();
			JsonArray jsonArr = gson.toJsonTree(calendarModelList).getAsJsonArray();
			jsonObj.add("data", jsonArr);
		}

		return jsonObj;
	 }
	
	@RequestMapping(value = "/admin/event/calendarmodel/update", method = {RequestMethod.GET, RequestMethod.POST})
	public String updateCalenModelList(@ModelAttribute("params") final CalendarModelDTO params, Model model) {
		try {
			boolean isUpdate = adminEventService.registerCalendarModel(params);
			if (isUpdate== false) {
				return showMessageWithRedirect("순위 등록에 실패하였습니다.", "/admin/event/calendarModel", Method.GET, null, model);
			}
		} catch (DataAccessException e) {
			return showMessageWithRedirect("데이터베이스 처리 과정에 문제가 발생하였습니다.", "/admin/event/calendarModel", Method.GET, null, model);

		} catch (Exception e) {
			return showMessageWithRedirect("시스템에 문제가 발생하였습니다.", "/admin/event/calendarModel", Method.GET, null, model);
		}

		//return showMessageWithRedirect("순위 등록이 완료되었습니다.", "admin/event/calendarModel", Method.GET, null, model);
		return "/admin/event/calendarModel";
	}
	/* 아기달력모델 */
}
